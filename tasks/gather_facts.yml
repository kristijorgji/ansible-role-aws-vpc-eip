---

###
### Asserts
###

- name: ensure name is defined
  assert:
    that:
      - eip.name is defined
    msg: "aws_vpc_eips[x].name is not defined"


###
### Variables
###

- name: ensure variables are reset
  set_fact:
    _aws_vpc_eip_tags: []
    _aws_vpc_eip_filters: []

- name: set eip tags
  set_fact:
    _aws_vpc_eip_tags: "{{ eip.tags | default([]) }} + [{'key': 'Name', 'val': '{{ eip.name }}'}]"

- name: set eip filters
  set_fact:
    _aws_vpc_eip_filters: >-
      {{ _aws_vpc_eip_filters | default([]) }} + [{'key': 'tag:{{ item.key }}', 'val': '{{ item.val }}'}]
  with_items:
    - "{{ _aws_vpc_eip_tags }}"


###
### Check existance
###

- name: gather eip facts by filter
  ec2_eip_facts:
    aws_access_key: "{{ lookup('ENV', 'AWS_ACCESS_KEY') | default(omit) }}"
    aws_secret_key: "{{ lookup('ENV', 'AWS_SECRET_KEY') | default(omit) }}"
    security_token: "{{ lookup('ENV', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    profile: "{{ aws_vpc_eip_profile | default(omit) }}"
    region: "{{ eip.region | default(aws_vpc_eip_default_region) }}"
    filters: "{{ _aws_vpc_eip_filters | get_attr('key', 'val') }}"
  register: _aws_vpc_eip_facts
